name: OpenWrt Builder

on:
  workflow_dispatch:

jobs:
  generate-matrix:
    name: Generate Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set build matrix from config/
        id: set-matrix
        run: |
          dirs=$(find config -mindepth 1 -maxdepth 1 -type d -printf '%f\n')
          json=$(echo "$dirs" | jq -R . | jq -s '{config: .}')
          echo "matrix=$json" >> $GITHUB_OUTPUT

  build:
    needs: generate-matrix
    runs-on: ubuntu-22.04
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}

    env:
      REPO_URL: https://github.com/coolsnowwolf/lede
      REPO_BRANCH: master
      FEEDS_CONF: feeds.conf.default
      DIY_P1_SH: diy-part1.sh
      DIY_P2_SH: diy-part2.sh
      TZ: Asia/Shanghai

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo df -hT
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Create simulated physical disk
        run: |
          sudo df -hT
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /workdir
          sudo mount /dev/github/runner /workdir
          sudo chown $USER:$GROUPS /workdir
          df -Th

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Load config and packages for ${{ matrix.config }}
        run: |
          cp config/${{ matrix.config }}/.config openwrt/.config
          cp -r config/${{ matrix.config }}/*/ openwrt/package/
          chmod -R 0755 openwrt/package/
          ls -l openwrt/package/

      - name: Run diy-part1.sh
        run: |
          chmod +x $DIY_P1_SH
          cd openwrt && $GITHUB_WORKSPACE/$DIY_P1_SH

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Run diy-part2.sh
        run: |
          chmod +x $DIY_P2_SH
          cd openwrt && $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: Download package
        run: |
          cd openwrt
          make defconfig
          make download -j$(nproc)
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s

      - name: Organize output
        run: |
          cd openwrt/bin/targets/*/*
          mkdir -p $GITHUB_WORKSPACE/output
          find . -type f -name "*.img.gz" -exec cp {} $GITHUB_WORKSPACE/output/ \;

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.config }}_${{ github.run_id }}_${{ github.run_attempt }}
          name: ${{ matrix.config }} build
          files: output/*.img.gz
